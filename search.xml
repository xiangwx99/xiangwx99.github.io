<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>实现https访问搭建的论坛</title>
      <link href="/2020/03/10/%E5%AE%9E%E7%8E%B0https%E8%AE%BF%E9%97%AE%E6%90%AD%E5%BB%BA%E7%9A%84%E8%AE%BA%E5%9D%9B/"/>
      <url>/2020/03/10/%E5%AE%9E%E7%8E%B0https%E8%AE%BF%E9%97%AE%E6%90%AD%E5%BB%BA%E7%9A%84%E8%AE%BA%E5%9D%9B/</url>
      
        <content type="html"><![CDATA[<p>对于刚搭建好的论坛，无法基于https安全访问，所以以下提供一种解决方法</p><h2 id="第一步：首先搭建discuz论坛"><a href="#第一步：首先搭建discuz论坛" class="headerlink" title="第一步：首先搭建discuz论坛"></a>第一步：首先搭建discuz论坛</h2><h3 id="可以参考：linux就该这么学搭建好论坛此时的论坛只能够基于http访问，而不可以基于https访问"><a href="#可以参考：linux就该这么学搭建好论坛此时的论坛只能够基于http访问，而不可以基于https访问" class="headerlink" title="可以参考：linux就该这么学搭建好论坛此时的论坛只能够基于http访问，而不可以基于https访问"></a>可以参考：<a href="https://www.linuxprobe.com/chapter-20.html" target="_blank" rel="noopener">linux就该这么学</a>搭建好论坛此时的论坛只能够基于http访问，而不可以基于https访问</h3><hr><h2 id="第二步：使用OpenSSL生成免费的证书"><a href="#第二步：使用OpenSSL生成免费的证书" class="headerlink" title="第二步：使用OpenSSL生成免费的证书"></a>第二步：使用OpenSSL生成免费的证书</h2><h3 id="2-1生成一个RSA私钥"><a href="#2-1生成一个RSA私钥" class="headerlink" title="2.1生成一个RSA私钥"></a>2.1生成一个RSA私钥</h3><pre class=" language-bash"><code class="language-bash">$ openssl genrsa -des3 -out wahaha.key 1024  </code></pre><p><img src="https://github.com/xiangwx99/blog_imgs/blob/master/images/1_1.png?raw=true" alt></p><h3 id="2-2创建证书签名请求CSR文件"><a href="#2-2创建证书签名请求CSR文件" class="headerlink" title="2.2创建证书签名请求CSR文件"></a>2.2创建证书签名请求CSR文件</h3><pre class=" language-bash"><code class="language-bash">openssl req -new -key wahaha.key -out wahaha.csrEnter pass phrase <span class="token keyword">for</span> wahaha.key:  //输入密码You are about to be asked to enter information that will be incorporatedinto your certificate request.What you are about to enter is what is called a Distinguished Name or a DN.There are quite a few fields but you can leave some blankFor some fields there will be a default value,If you enter <span class="token string">'.'</span>, the field will be left blank.Country Name <span class="token punctuation">(</span>2 letter code<span class="token punctuation">)</span> <span class="token punctuation">[</span>XX<span class="token punctuation">]</span>:CN  //输入国家代码,中国为CNState or Province Name <span class="token punctuation">(</span>full name<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>:SiChuan  //输入所在省份Locality Name <span class="token punctuation">(</span>eg, city<span class="token punctuation">)</span> <span class="token punctuation">[</span>Default City<span class="token punctuation">]</span>:ChengDu  //输入城市Organization Name <span class="token punctuation">(</span>eg, company<span class="token punctuation">)</span> <span class="token punctuation">[</span>Default Company Ltd<span class="token punctuation">]</span>:stu  //输入机构组织，我随便写的stuOrganizational Unit Name <span class="token punctuation">(</span>eg, section<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>:stu  //输入机构部门Common Name <span class="token punctuation">(</span>eg, your name or your server<span class="token string">'s hostname) []:*.abc.com  //输入域名Email Address []:admin@abc.com  //输入邮箱地址           Please enter the following '</span>extra' attributesto be sent with your certificate requestA challenge password <span class="token punctuation">[</span><span class="token punctuation">]</span>: //输入证书密码，如不想输入直接回车即可An optional company name <span class="token punctuation">[</span><span class="token punctuation">]</span>:  //直接回车  </code></pre><h3 id="2-3查看文件是否生成成功"><a href="#2-3查看文件是否生成成功" class="headerlink" title="2.3查看文件是否生成成功"></a>2.3查看文件是否生成成功</h3><p><img src="https://github.com/xiangwx99/blog_imgs/blob/master/images/1_2.png?raw=true" alt></p><h3 id="2-4拷贝一个不需要输入密码的密钥文件"><a href="#2-4拷贝一个不需要输入密码的密钥文件" class="headerlink" title="2.4拷贝一个不需要输入密码的密钥文件"></a>2.4拷贝一个不需要输入密码的密钥文件</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># openssl rsa -in wahaha.key -out wahaha_nopass.key</span></code></pre><p><img src="https://github.com/xiangwx99/blog_imgs/blob/master/images/3.png?raw=true" alt></p><h3 id="2-5生成CA证书"><a href="#2-5生成CA证书" class="headerlink" title="2.5生成CA证书"></a>2.5生成CA证书</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#openssl x509 -req -days 365 -in wahaha.csr -signkey wahaha.key -out wahaha.crt</span></code></pre><p><img src="https://github.com/xiangwx99/blog_imgs/blob/master/images/5.png?raw=true" alt><br>      X509:指定格式<br>      -in：指定请求文件<br>      -signkey:自签名</p><p>   查看证书是否生成成功:</p><p><img src="https://github.com/xiangwx99/blog_imgs/blob/master/images/6.png?raw=true" alt></p><hr><h2 id="第三步：nginx配置SSL证书实现https服务"><a href="#第三步：nginx配置SSL证书实现https服务" class="headerlink" title="第三步：nginx配置SSL证书实现https服务"></a>第三步：nginx配置SSL证书实现https服务</h2><h3 id="3-1将上述过程中中生成的证书，移动到nginx配置文件的同级目录中，创建一个名为cert的文件夹存放证书，并且查看是否移动成功"><a href="#3-1将上述过程中中生成的证书，移动到nginx配置文件的同级目录中，创建一个名为cert的文件夹存放证书，并且查看是否移动成功" class="headerlink" title="3.1将上述过程中中生成的证书，移动到nginx配置文件的同级目录中，创建一个名为cert的文件夹存放证书，并且查看是否移动成功"></a>3.1将上述过程中中生成的证书，移动到nginx配置文件的同级目录中，创建一个名为cert的文件夹存放证书，并且查看是否移动成功</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#mkdir /usr/local/nginx/conf/cert</span><span class="token comment" spellcheck="true">#mv wahaha</span><span class="token comment" spellcheck="true">#mv wahaha.crt /usr/local/nginx/conf/cert</span><span class="token comment" spellcheck="true">#mv wahaha.key /usr/local/nginx/conf/cert</span><span class="token comment" spellcheck="true">#mv wahaha.csr /usr/local/nginx/conf/cert</span><span class="token comment" spellcheck="true">#mv wahaha_nopass.key /usr/local/nginx/conf/cert</span><span class="token comment" spellcheck="true">#cd /usr/local/nginx/conf/cert</span></code></pre><p><img src="https://github.com/xiangwx99/blog_imgs/blob/master/images/7.png?raw=true" alt></p><h3 id="3-2使用vim编辑nginx配置文件nginx-conf，增加https协议"><a href="#3-2使用vim编辑nginx配置文件nginx-conf，增加https协议" class="headerlink" title="3.2使用vim编辑nginx配置文件nginx.conf，增加https协议"></a>3.2使用vim编辑nginx配置文件nginx.conf，增加https协议</h3><p>98行附近有个 # HTTPS server将下面的注释全部去掉<br><img src="https://github.com/xiangwx99/blog_imgs/blob/master/images/8.png?raw=true" alt><br><img src="https://github.com/xiangwx99/blog_imgs/blob/master/images/9.png?raw=true" alt></p><h3 id="3-4重启Nginx"><a href="#3-4重启Nginx" class="headerlink" title="3.4重启Nginx"></a>3.4重启Nginx</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#/etc/rc.d/init.d/nginx restart</span></code></pre><p><img src="https://github.com/xiangwx99/blog_imgs/blob/master/images/10.png?raw=true" alt><br>若重启失败就要考虑nginx.conf中修改是否出错</p><h3 id="3-5使用https访问本地搭建好的论坛"><a href="#3-5使用https访问本地搭建好的论坛" class="headerlink" title="3.5使用https访问本地搭建好的论坛"></a>3.5使用https访问本地搭建好的论坛</h3><p><img src="https://github.com/xiangwx99/blog_imgs/blob/master/images/11.png?raw=true" alt><br><img src="https://github.com/xiangwx99/blog_imgs/blob/master/images/12.png?raw=true" alt><br><img src="https://github.com/xiangwx99/blog_imgs/blob/master/images/13.png?raw=true" alt></p><h3 id="3-6访问时下载PHP文件的格式，可以得知https访问不支持PHP格式于是修改配置文件nginx-conf添加下面代码（添加到刚才解除注释的server-里面）"><a href="#3-6访问时下载PHP文件的格式，可以得知https访问不支持PHP格式于是修改配置文件nginx-conf添加下面代码（添加到刚才解除注释的server-里面）" class="headerlink" title="3.6访问时下载PHP文件的格式，可以得知https访问不支持PHP格式于是修改配置文件nginx.conf添加下面代码（添加到刚才解除注释的server{}里面）"></a>3.6访问时下载PHP文件的格式，可以得知https访问不支持PHP格式于是修改配置文件nginx.conf添加下面代码（添加到刚才解除注释的server{}里面）</h3><pre class=" language-bash"><code class="language-bash"> location ~ \.php$ <span class="token punctuation">{</span>            root           html<span class="token punctuation">;</span>            fastcgi_pass   127.0.0.1:9000<span class="token punctuation">;</span>            fastcgi_index  index.php<span class="token punctuation">;</span>            fastcgi_param  SCRIPT_FILENAME  <span class="token variable">$document_root</span><span class="token variable">$fastcgi_script_name</span><span class="token punctuation">;</span>            include        fastcgi_params<span class="token punctuation">;</span>        <span class="token punctuation">}</span></code></pre><h3 id="3-7重启Nginx"><a href="#3-7重启Nginx" class="headerlink" title="3.7重启Nginx"></a>3.7重启Nginx</h3><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#/etc/rc.d/init.d/nginx restart</span></code></pre><p><img src="https://github.com/xiangwx99/blog_imgs/blob/master/images/10.png?raw=true" alt></p><p>若重启失败就要考虑nginx.conf中修改是否出错</p><h3 id="3-8使用https访问本地搭建好的论坛"><a href="#3-8使用https访问本地搭建好的论坛" class="headerlink" title="3.8使用https访问本地搭建好的论坛"></a>3.8使用https访问本地搭建好的论坛</h3><p><img src="https://github.com/xiangwx99/blog_imgs/blob/master/images/14.png?raw=true" alt></p><p>访问成功</p><hr>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客</title>
      <link href="/2020/03/08/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
      <url>/2020/03/08/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><pre><code>I  LOVE  DOGEGG</code></pre><p>内容</p><hr><h2 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h2><p>内容</p><hr><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/03/08/hello-world/"/>
      <url>/2020/03/08/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
